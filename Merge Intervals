public class Solution {
    public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
        if(intervals.size()<=1) return intervals;
        Collections.sort(intervals,new intervalComp());
        int start=intervals.get(0).start,end=intervals.get(0).end;
        int i=0;
        intervals.remove(0);
        while(i<intervals.size()){
            if(end<intervals.get(i).start){
                intervals.add(i,new Interval(start,end));
                i++;
                start=intervals.get(i).start;
                end=intervals.get(i).end;
                intervals.remove(i);
            }
            else{
                Interval tmp=intervals.remove(i);
                start=Math.min(start,tmp.start);
                end=Math.max(end,tmp.end);
            }
        }
        intervals.add(new Interval(start,end));
        return intervals;
        
    }
}

class intervalComp implements Comparator<Interval>
{
    public int compare(Interval a, Interval b) {
        return a.start - b.start;
    }
}
